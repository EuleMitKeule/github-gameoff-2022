name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch:
    
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Create semantic release
        uses: docker://ghcr.io/codfish/semantic-release-action:latest
        id: semantic
        with:
          tag_format: 'v${version}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: EuleMitKeule/odin-inspector-3.1.6.1
           path: odin/
           ref: master
           token: ${{ secrets.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* WorkingTitle/
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: WorkingTitle/Library
          key: Library-WorkingTitle-TargetPlatform
          restore-keys: |
            Library-WorkingTitle-
            Library-

      - name: Build StandaloneWindows64
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: StandaloneWindows64
          projectPath: WorkingTitle/
          buildName: WorkingTitle-StandaloneWindows64
          buildsPath: WorkingTitle/builds
          versioning: Custom
          version: ${{ needs.release.outputs.version }}

      - name: Upload StandaloneWindows64
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: WorkingTitle/builds/WorkingTitle-StandaloneWindows64

  build-osx:
    name: Build OSX
    runs-on: ubuntu-latest
    needs: release
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: EuleMitKeule/odin-inspector-3.1.6.1
           path: odin/
           ref: master
           token: ${{ secrets.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* WorkingTitle/
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: WorkingTitle/Library
          key: Library-WorkingTitle-TargetPlatform
          restore-keys: |
            Library-WorkingTitle-
            Library-     

      - name: Build StandaloneOSX
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: StandaloneOSX
          projectPath: WorkingTitle/
          buildName: WorkingTitle-StandaloneOSX
          buildsPath: WorkingTitle/builds
          versioning: Custom
          version: ${{ needs.release.outputs.version }}

      - name: Upload StandaloneOSX
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: WorkingTitle/builds/WorkingTitle-StandaloneOSX

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: release
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: EuleMitKeule/odin-inspector-3.1.6.1
           path: odin/
           ref: master
           token: ${{ secrets.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* WorkingTitle/
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: WorkingTitle/Library
          key: Library-WorkingTitle-TargetPlatform
          restore-keys: |
            Library-WorkingTitle-
            Library-

      - name: Build StandaloneLinux64
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: StandaloneLinux64
          projectPath: WorkingTitle/
          buildName: WorkingTitle-StandaloneLinux64
          buildsPath: WorkingTitle/builds
          versioning: Custom
          version: ${{ needs.release.outputs.version }}

      - name: Upload StandaloneLinux64
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: WorkingTitle/builds/WorkingTitle-StandaloneLinux64

  build-webgl:
    name: Build WebGL
    runs-on: ubuntu-latest
    needs: release
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: EuleMitKeule/odin-inspector-3.1.6.1
           path: odin/
           ref: master
           token: ${{ secrets.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* WorkingTitle/
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: WorkingTitle/Library
          key: Library-WorkingTitle-TargetPlatform
          restore-keys: |
            Library-WorkingTitle-
            Library-

      - name: Build WebGL
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: WebGL
          projectPath: WorkingTitle/
          buildName: WorkingTitle-WebGL
          buildsPath: WorkingTitle/builds
          versioning: Custom
          version: ${{ needs.release.outputs.version }}

      - name: Upload WebGL
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: WorkingTitle/builds/WorkingTitle-WebGL
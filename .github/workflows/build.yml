name: Build

env:
  PROJECT_DIR: "WorkingTitle"
  PROJECT_NAME: "WorkingTitle"
  USE_ODIN: true
  ODIN_REPO: EuleMitKeule/odin-inspector-3.1.6.1
  GH_PAT: ${{ secrets.GH_PAT }}
  BUILD_DIR: "WorkingTitle/Builds"

on:
  push:
    branches:
      - master
  workflow_dispatch:
    
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.version }}
      uploadUrl: ${{ steps.getUploadUrl.outputs.uploadUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create semantic release
        uses: docker://ghcr.io/codfish/semantic-release-action:latest
        id: semantic
        with:
          tag_format: 'v${version}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get upload URL
        id: getUploadUrl
        run: |
          uploadUrl=$(curl -sL https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.semantic.outputs.new_release_git_tag }} | jq -r '.upload_url')
          echo uploadUrl=$uploadUrl >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        buildTarget: ["StandaloneWindows64", "StandaloneOSX", "StandaloneLinux64", "WebGL"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: ${{ env.ODIN_REPO }}
           path: odin/
           ref: master
           token: ${{ env.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* ${{ env.PROJECT_DIR }}
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PROJECT_DIR }}/Library
          key: Library-${{ env.PROJECT_DIR }}-TargetPlatform
          restore-keys: |
            Library-${{ env.PROJECT_DIR }}-
            Library-

      - name: Build ${{ matrix.buildTarget }}
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.buildTarget }}
          projectPath: ${{ env.PROJECT_DIR }}
          buildName: ${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}
          buildsPath: ${{ env.BUILD_DIR }}
          versioning: Custom
          version: ${{ needs.release.outputs.version }}

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: ${{ env.BUILD_DIR }}/${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}

      - name: Zip build
        uses: thedoctor0/zip-release@v1
        with:
          files: ${{ env.BUILD_DIR }}/${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}
          filename: ${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}
      
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.uploadUrl }}
          asset_path: ${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}.zip
          asset_name: ${{ env.PROJECT_NAME }}-${{ matrix.buildTarget }}-${{ needs.release.outputs.version }}.zip
          asset_content_type: application/zip

name: Test

on:
  push:
    branches:
      - master
  workflow_dispatch:
    
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Checkout odin-inspector
        uses: actions/checkout@v3
        with:
           repository: EuleMitKeule/odin-inspector-3.1.6.1
           path: odin/
           ref: master
           token: ${{ secrets.GH_PAT }}
      
      - name: Move odin-inspector
        run: |
          cp -r odin/* WorkingTitle/
          rm -r odin
      
      - name: Cache
        uses: actions/cache@v2
        with:
          path: WorkingTitle/Library
          key: Library-WorkingTitle-TargetPlatform
          restore-keys: |
            Library-WorkingTitle-
            Library-

      - name: Run tests
        id: run-tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: WorkingTitle/
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          customParameters: -debugCodeOptimization -enableCodeCoverage -coverageOptions generateBadgeReport;assemblyFilters:+WorkingTitle.Unity,+WorkingTitle.Lib

      - name: Store results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results
          path: ${{ steps.run-tests.outputs.artifactsPath }}

      - name: Store coverage
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Code coverage
          path: ${{ steps.run-tests.outputs.coveragePath }}
          
      - name: Commit coverage badges
        run: |
          git config --local user.email "l.beers@outlook.de"
          git config --local user.name "EuleMitKeule"
          
          # delete branch origin badges if exists
          git branch -D origin/badges &>/dev/null || true  

          # create branch badges
          git checkout -b badges

          # add coverage badges
          git add .
          git commit -m "chore(docs): update coverage badges"

          # push branch badges
          git push --set-upstream origin badges
